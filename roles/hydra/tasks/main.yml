---
- name: Create system group
  group:
    name: "{{ groupId }}"
    system: true
    state: present
  when: groupId != 'root'

- name: Create system user
  user:
    name: "{{ userId }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ groupId }}"
    createhome: false
  when: groupId != 'root'

- block:
  - name: Download ORY Hydra binary to local folder
    become: false
    get_url:
      url: "{{ hydra_download_link }}"
      dest: "/tmp/{{ hydra_pack_name }}.{{ hydra_pack_ext }}"
    register: _download_archive
    until: _download_archive is succeeded
    retries: 3
    delay: 2
    run_once: true
    delegate_to: localhost
    check_mode: false

  - name: Create tmp folder
    become: false
    file:
      path: "/tmp/{{ hydra_pack_name }}"
      state: directory
    delegate_to: localhost
    check_mode: false

  - name: Unpack ORY Hydra binaries
    become: false
    unarchive:
      src: "/tmp/{{ hydra_pack_name }}.{{ hydra_pack_ext }}"
      dest: "/tmp/{{ hydra_pack_name }}/"
      creates: "/tmp/{{ hydra_pack_name }}/hydra"
    delegate_to: localhost
    check_mode: false

  - name: Copy ORY Hydra binaries
    copy:
      src: "/tmp/{{ hydra_pack_name }}/hydra"
      dest: "{{ hydra_bin_dir }}"
      mode: 0755
      owner: "{{ userId }}"
      group: "{{ groupId }}"
    # notify: restart hydra

  when: hydra_install | default(false) | bool

- name: Create db
  shell: /usr/bin/mysql -u sst_user -p'{{ mariadb_sst_pass }}' --host {{ mariadb_proxy_host }} -P {{ mariadb_proxy_port }} -ne "CREATE DATABASE IF NOT EXISTS {{ hydra_db_name }};"
  changed_when: False
  run_once: yes

- name: Retrieve db user grants from mysql
  shell: /usr/bin/mysql -u sst_user -p'{{ mariadb_sst_pass }}' --host {{ mariadb_proxy_host }} -P {{ mariadb_proxy_port }} -e "select Host, User from mysql.user where User = '{{ hydra_db_user }}';" --batch --skip-column-names
  register: stuff
  check_mode: no
  changed_when: False
  run_once: yes

- name: Revoke all grant for db user
  vars:
    userhost: "'{{ item.split('\t')[1] }}'@'{{ item.split('\t')[0] }}'"
  shell: /usr/bin/mysql -u sst_user -p'{{ mariadb_sst_pass }}' --host {{ mariadb_proxy_host }} -P {{ mariadb_proxy_port }} -ne "DROP USER {{ userhost }};"
  with_items: "{{ stuff.stdout_lines }}"
  run_once: yes
  when: item.split('\t')[0] not in mariadb_safe_hosts

- name: Add db user to mysql
  shell: /usr/bin/mysql -u sst_user -p'{{ mariadb_sst_pass }}' --host {{ mariadb_proxy_host }} -P {{ mariadb_proxy_port }} -ne "GRANT ALL ON {{ hydra_db_name }}.* TO '{{ hydra_db_user }}'@'{{ item }}' IDENTIFIED BY '{{ hydra_db_pass }}';"
  with_items: "{{ mariadb_safe_hosts }}"
  changed_when: False
  run_once: yes

- name: Copy hydra config file
  template:
    src: "hydra.yml.j2"
    dest: /etc/hydra.yml
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    mode: 0640
  notify: restart hydra

- name: Copy hydra systemd service file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/{{ serviceName }}.service
  notify: restart hydra

- name: Run hydra migrations
  shell: "{{ hydra_bin_dir }}/hydra migrate sql -y 'mysql://{{ hydra_db_user }}:{{ hydra_db_pass }}@tcp({{ mariadb_proxy_host }}:{{ mariadb_proxy_port }})/{{ hydra_db_name }}'"
  run_once: yes
  when: hydra_setup | default(false) | bool
