---
- name: Install MariaDB packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - mariadb-server
    - rsync
    - galera
    - python-pymysql
    - python3-pymysql

- name: Create path for data directory
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode | default('0750') }}"
  with_items:
    - path: "{{ mariadb_data_dir }}"
      owner: mysql
      group: mysql
    - path: /etc/mysql/conf.d
      owner: mysql
      group: mysql

- name: Increase open files limits for mariadb
  copy:
    src: files/limits.conf
    dest: /etc/systemd/system/mariadb.service.d/
  notify:
    - Reload systemd

- name: Push main config
  vars:
    server_names: "{{ groups[db_group] }}"
  template:
    src: cluster.cnf
    dest: /etc/mysql/mariadb.conf.d/90-cluster.cnf
    mode: 0644
    owner: root
    group: root
    backup: yes

- name: Initialize datadir
  shell: /usr/bin/mysql_install_db --user=mysql --datadir={{ mariadb_data_dir }} --auth-root-authentication-method=socket
  when: mariadb_init | default(false) | bool

- name: Enable mariadb
  systemd:
    name: mariadb
    enabled: yes
    daemon_reload: yes

- name: Stop cluster on slaves
  systemd:
    name: mariadb
    state: stopped
  when:  mariadb_rejoin | bool and not(db_master | default(false) | bool)

- name: Stop cluster on master
  systemd:
    name: mariadb
    state: stopped
  when:  mariadb_rejoin | bool and (db_master | default(false) | bool)

- name: Start cluster on master
  command: /usr/bin/galera_new_cluster
  when: mariadb_rejoin | bool and (db_master | default(false) | bool)

- name: Start cluster on slaves
  systemd:
    name: mariadb
    state: started
  when: mariadb_rejoin | bool and not(db_master | default(false) | bool)

- name: Push root .my.cnf config file
  template:
    src: my.cnf
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600
  notify: mariadb_restart

# Replaced shell: mysql_secure_installation
- name: Run mysql_secure_installation
  include_tasks: secure_install.yml
  when: (mariadb_secure | default('false') | bool) and (db_master | default(false) | bool)

- name: Retrieve sst_user grants from mysql
  command: "/usr/bin/mysql -e \"select Host, User from mysql.user where User = 'sst_user';\" --batch --skip-column-names"
  register: stuff
  check_mode: no
  changed_when: False
  when: (db_master | default(false) | bool)

- name: Revoke all grant for sst_user
  command: "/usr/bin/mysql -ne \"DROP USER '{{ item.split('\t')[1] }}'@'{{ item.split('\t')[0] }}';\""
  with_items: "{{ stuff.stdout_lines }}"
  when: (db_master | default(false) | bool) and (item.split('\t')[0] not in mariadb_safe_hosts)

- name: Add replication user
  command: "/usr/bin/mysql -ne \"GRANT USAGE ON *.* TO sst_user@'{{ item }}' IDENTIFIED BY '{{ mariadb_sst_pass }}' WITH GRANT OPTION; GRANT ALL PRIVILEGES on *.* to sst_user@'{{ item }}';\""
  with_items: "{{ mariadb_safe_hosts }}"
  changed_when: False
  when: (db_master | default(false) | bool)

- name: Retrieve cluster_check_user grants from mysql
  command: "/usr/bin/mysql -e \"select Host, User from mysql.user where User = '{{ mariadb_clustercheck.user }}';\" --batch --skip-column-names"
  register: stuff
  check_mode: no
  changed_when: False
  when: (db_master | default(false) | bool)

- name: Revoke all grant for cluster_check_user
  command: "/usr/bin/mysql -ne \"DROP USER '{{ item.split('\t')[1] }}'@'{{ item.split('\t')[0] }}';\""
  with_items: "{{ stuff.stdout_lines }}"
  when: (db_master | default(false) | bool) and (item.split('\t')[0] not in mariadb_safe_hosts)

- name: Add cluster_check_user
  shell:
    /usr/bin/mysql -ne "GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO '{{ mariadb_clustercheck.user }}'@'{{ item }}' IDENTIFIED BY '{{ mariadb_clustercheck.pass }}';"
  with_items: "{{ mariadb_safe_hosts }}"
  changed_when: False
  when: (db_master | default(false) | bool)

- meta: flush_handlers

- name: Check cluster
  command: '/usr/bin/mysql -ne "{{ item }}"'
  with_items:
    - "SHOW STATUS LIKE 'wsrep_cluster_size';"
  register: cluster_status
  check_mode: no
  changed_when: False

- name: Print cluster status
  debug:
    var: cluster_status.results[0].stdout_lines[1]
  changed_when: False
