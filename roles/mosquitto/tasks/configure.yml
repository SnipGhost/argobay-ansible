---
- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    mode: 0755
  loop:
    - "{{ mosquitto_data_dir }}"
  notify: restart mosquitto

- name: Create config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default(userId) }}"
    group: "{{ item.group | default(groupId) }}"
    mode: "{{ item.mode | default('0640') }}"
    backup: yes
  loop:
    - src: mosquitto.conf.j2
      dest: "{{ mosquitto_config_file }}"
    - src: main.acl.j2
      dest: "{{ mosquitto_acl_file }}"
    - src: service.j2
      dest: /lib/systemd/system/mosquitto.service
      owner: root
      group: root
      mode: 0644
  notify: restart mosquitto

- name: Make sure the password file exists
  file:
    path: "{{ mosquitto_password_file }}"
    state: file
    owner: root
    group: "{{ groupId }}"
    mode: 0640

- name: Check current list of user entries
  command: awk -F ':' '{print $1}' {{ mosquitto_password_file }}
  register: mosquitto_register_passwd
  changed_when: False
  check_mode: False

- name: Remove user/password entries
  command: 'mosquitto_passwd -D {{ mosquitto_password_file }} {{ item }}'
  with_items: '{{ mosquitto_register_passwd.stdout_lines }}'
  when: mosquitto_users | selectattr('name', 'equalto', item) | list | count == 0
  notify: reload mosquitto

- name: Create user/password entries
  environment:
    MOSQUITTO_PASSWORD: '{{ item.pass }}'
  command: 'mosquitto_passwd -b {{ mosquitto_password_file }} {{ item.name }} ${MOSQUITTO_PASSWORD}'
  with_items: '{{ mosquitto_users }}'
  when: item.name not in mosquitto_register_passwd.stdout_lines
  notify: reload mosquitto

- name: Start and enable mosquitto
  systemd:
    name: mosquitto
    state: started
    enabled: yes
    daemon_reload: yes
  register: mosquitto_started
