{{ ansible_managed | comment }}

user  {{ userId }}  {{ groupId }};

worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 20000;

pcre_jit on;

error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;

events {
    worker_connections 768;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr $host $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$request_length $request_time [$upstream_cache_status] '
                      '[$upstream_addr $upstream_response_time $upstream_status] '
                      '$content_length';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;

    keepalive_timeout  65;
    keepalive_requests 100;

    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/pdf image/svg+xml;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server_names_hash_bucket_size 128;

    proxy_buffer_size 64k;
    proxy_buffers     8 64k;

    proxy_connect_timeout 5s;
    proxy_read_timeout 30m;
    proxy_send_timeout 30m;

{% for limit in nginx_conn_limits %}
    limit_conn_zone {{ limit.field }} zone={{ limit.name }}:{{ limit.size | default('10m') }};
{% endfor %}
{% for limit in nginx_rate_limits %}
    limit_req_zone {{ limit.field }} zone={{ limit.name }}:{{ limit.size | default('10m') }} rate={{ limit.rate }};
{% endfor %}

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets on;
    ssl_session_timeout 24h;
    ssl_buffer_size 16k;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
