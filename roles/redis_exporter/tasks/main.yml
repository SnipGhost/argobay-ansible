---
- name: Creating redis_exporter user group
  group: name="{{groupId}}"

- name: Creating redis_exporter user
  user:
    name: "{{userId}}"
    group: "{{groupId}}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{userId}} nologin User"
    createhome: "no"
    state: present

- name: Create path for config directory
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode | default('0750') }}"
  with_items:
    - path: /var/lib/prometheus
      owner: prometheus
      group: prometheus

- name: Install prometheus redis exporter
  unarchive:
    src: "https://github.com/oliver006/redis_exporter/releases/download/v{{ redis_exporter_version }}/redis_exporter-v{{ redis_exporter_version }}.linux-{% if proc_version.startswith('arm') %}arm{% else %}{{ proc_version }}{% endif %}.tar.gz"
    dest: /tmp/
    remote_src: yes

- name: Copy prometheus redis exporter file to bin
  copy:
    src: "/tmp/redis_exporter-v{{ redis_exporter_version }}.linux-{% if proc_version.startswith('arm') %}arm{% else %}{{ proc_version }}{% endif %}/redis_exporter"
    dest: "/usr/local/bin/redis_exporter"
    owner: "{{userId}}"
    group: "{{groupId}}"
    remote_src: yes
    mode: 0755
  notify: redis_exporter_restart

- name: Delete redis exporter tmp folder
  file:
    path: "/tmp/redis_exporter-v{{ redis_exporter_version }}.linux-{% if proc_version.startswith('arm') %}arm{% else %}{{ proc_version }}{% endif %}"
    state: absent

- name: Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/redis_exporter.service
  notify:
    - systemd_reload
    - redis_exporter_restart

- meta: flush_handlers

- name: Start redis_exporter service
  service:
    name: redis_exporter
    state: started
    enabled: yes

- name: Check if redis exporter emits metrices
  uri:
    url: http://127.0.0.1:9121/metrics
    method: GET
    status_code: 200
