---
- name: Install MySQL client (for ansible tasks)
  package:
    name: mariadb-client
    state: present

- name: Clone repo
  git:
    repo: "{{ smarthome_git }}"
    dest: "{{ smarthome_bindir }}"
    clone: yes
    update: yes
  notify:
    - app_restart

- name: Creating app user group
  group: name="{{groupId}}"

- name: Creating app user
  user:
    name: "{{userId}}"
    group: "{{groupId}}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{userId}} nologin User"
    createhome: "no"
    state: present

- name: Add admin users to app group
  user:
    name: "{{ item.name }}"
    groups: "{{ groupId }}"
    append: yes
  with_items: "{{ admins }}"

- name: Create uwsgi-app-config
  template:
    src: uwsgi-app.ini.j2
    dest: /etc/uwsgi/apps-available/{{ app_name }}.ini
    mode: 0644
    owner: root
    group: root
  notify:
    - app_restart

- name: Create a symbolic link in apps-enabled
  file:
    src: /etc/uwsgi/apps-available/{{ app_name }}.ini
    dest: /etc/uwsgi/apps-enabled/{{ app_name }}.ini
    owner: root
    group: root
    mode: 0644
    state: link
  notify:
    - app_restart

- name: Create path for working directory
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode | default('0755') }}"
  with_items:
    - path: "{{ smarthome_logdir }}"
      owner: "{{ userId }}"
      group: "{{ groupId }}"
    - path: "{{ smarthome_confdir }}"
      owner: "{{ userId }}"
      group: "{{ groupId }}"

- name: Copy logrotate config file
  template:
    src: logrotate.j2
    dest: /etc/logrotate.d/{{ app_name }}
  notify: logrotate_restart

- name: Delete invalid rsyslog config
  file:
    path: /etc/rsyslog.d/{{ app_name }}
    state: absent
  notify: rsyslog_restart

- name: Copy rsyslog config file
  template:
    src: rsyslog.conf.j2
    dest: /etc/rsyslog.d/98-{{ app_name }}.conf
  notify: rsyslog_restart

- name: Create app config
  template:
    src: "{{ item.src }}"
    dest: "{{ smarthome_confdir }}/{{ item.dest }}"
    mode: 0660
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    backup: yes
  with_items:
    - { src: app.config.json.j2, dest: api.config.json }
  notify:
    - app_restart

- name: Reset static
  file:
    dest: "{{ smarthome_bindir }}/static"
    owner: root
    group: "{{ groupId }}"
    mode: u=rwX,g=rX,o=rX
    recurse: yes

- name: Create venv and install requirements
  pip: 
    requirements: "{{ smarthome_bindir }}/requirements.txt"
    virtualenv: "{{ smarthome_bindir }}/env"
    virtualenv_python: python3.7
  notify:
    - app_restart

- name: Retrieve db user grants from mysql
  shell: /usr/bin/mysql -u sst_user -p'{{ mariadb_sst_pass }}' --host {{ mariadb_proxy_host }} -P {{ mariadb_proxy_port }} -e "select Host, User from mysql.user where User = '{{ smarthome_db_user }}';" --batch --skip-column-names
  register: stuff
  check_mode: no
  changed_when: False
  when: (inventory_hostname == groups[smarthome_group][0])

- name: Revoke all grant for db user
  vars:
    userhost: "'{{ item.split('\t')[1] }}'@'{{ item.split('\t')[0] }}'"
  shell: /usr/bin/mysql -u sst_user -p'{{ mariadb_sst_pass }}' --host {{ mariadb_proxy_host }} -P {{ mariadb_proxy_port }} -ne "DROP USER {{ userhost }};"
  with_items: "{{ stuff.stdout_lines }}"
  when: (inventory_hostname == groups[smarthome_group][0]) and (item.split('\t')[0] not in mariadb_safe_hosts)

- name: Add db user to mysql
  shell: /usr/bin/mysql -u sst_user -p'{{ mariadb_sst_pass }}' --host {{ mariadb_proxy_host }} -P {{ mariadb_proxy_port }} -ne "GRANT SELECT, INSERT, DELETE, UPDATE ON {{ smarthome_db_name }}.* TO '{{ smarthome_db_user }}'@'{{ item }}' IDENTIFIED BY '{{ smarthome_db_pass }}';"
  with_items: "{{ mariadb_safe_hosts }}"
  changed_when: False
  when: (inventory_hostname == groups[smarthome_group][0])

- name: Re-create db
  shell: /usr/bin/mysql -u sst_user -p'{{ mariadb_sst_pass }}' --host {{ mariadb_proxy_host }} -P {{ mariadb_proxy_port }} < {{ smarthome_bindir }}/setup/smarthome.sql 
  when: (inventory_hostname == groups[smarthome_group][0]) and (smarthome_setup | default(false) | bool)

- meta: flush_handlers

- name: Start and enable uwsgi-app
  systemd:
    name: "uwsgi-app@{{ app_name }}"
    state: started
    enabled: yes
